; Check that loop stripmining properly handles unwind destinations of
; detach statements when creating an epilog loop.
;
; RUN: opt < %s -loop-stripmine -S | FileCheck %s
; RUN: opt < %s -passes='loop-stripmine' -S | FileCheck %s

target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.OFM.124.342.559.768.977.2377.4177.5977.7377.8777.10577.12377.13777.15577.17377.19177.19777.20777.22177.23977.26177.27577.28977.30777.32177.33577.34977.36777.37377.38377.42177.42377.42777.42977.43577.43977.44777.45177.45377.45577.45777.46977.47977.50177.50377.50777.50977.51177.52977.55177.55777.55977.56777.57977.58577.59577.61177.61977.62577.63177.63777.65177.65577.65977.68777.73577.75977.80977.81177.82463 = type { %class.Graph.50.268.485.694.903.2303.4103.5903.7303.8703.10503.12303.13703.15503.17303.19103.19703.20703.22103.23903.26103.27503.28903.30703.32103.33503.34903.36703.37303.38303.42103.42303.42703.42903.43503.43903.44703.45103.45303.45503.45703.46903.47903.50103.50303.50703.50903.51103.52903.55103.55703.55903.56703.57903.58503.59503.61103.61903.62503.63103.63703.65103.65503.65903.68703.73503.75903.80903.81103.82455, %struct.edge_list.118.336.553.762.971.2371.4171.5971.7371.8771.10571.12371.13771.15571.17371.19171.19771.20771.22171.23971.26171.27571.28971.30771.32171.33571.34971.36771.37371.38371.42171.42371.42771.42971.43571.43971.44771.45171.45371.45571.45771.46971.47971.50171.50371.50771.50971.51171.52971.55171.55771.55971.56771.57971.58571.59571.61171.61971.62571.63171.63771.65171.65571.65971.68771.73571.75971.80971.81171.82456, %"class.std::vector.86.123.341.558.767.976.2376.4176.5976.7376.8776.10576.12376.13776.15576.17376.19176.19776.20776.22176.23976.26176.27576.28976.30776.32176.33576.34976.36776.37376.38376.42176.42376.42776.42976.43576.43976.44776.45176.45376.45576.45776.46976.47976.50176.50376.50776.50976.51176.52976.55176.55776.55976.56776.57976.58576.59576.61176.61976.62576.63176.63776.65176.65576.65976.68776.73576.75976.80976.81176.82462", %class.Lock.117.335.552.761.970.2370.4170.5970.7370.8770.10570.12370.13770.15570.17370.19170.19770.20770.22170.23970.26170.27570.28970.30770.32170.33570.34970.36770.37370.38370.42170.42370.42770.42970.43570.43970.44770.45170.45370.45570.45770.46970.47970.50170.50370.50770.50970.51170.52970.55170.55770.55970.56770.57970.58570.59570.61170.61970.62570.63170.63770.65170.65570.65970.68770.73570.75970.80970.81170.82457, i64, [32 x double], [32 x double] }
%class.Graph.50.268.485.694.903.2303.4103.5903.7303.8703.10503.12303.13703.15503.17303.19103.19703.20703.22103.23903.26103.27503.28903.30703.32103.33503.34903.36703.37303.38303.42103.42303.42703.42903.43503.43903.44703.45103.45303.45503.45703.46903.47903.50103.50303.50703.50903.51103.52903.55103.55703.55903.56703.57903.58503.59503.61103.61903.62503.63103.63703.65103.65503.65903.68703.73503.75903.80903.81103.82455 = type { i32 (...)** }
%struct.edge_list.118.336.553.762.971.2371.4171.5971.7371.8771.10571.12371.13771.15571.17371.19171.19771.20771.22171.23971.26171.27571.28971.30771.32171.33571.34971.36771.37371.38371.42171.42371.42771.42971.43571.43971.44771.45171.45371.45571.45771.46971.47971.50171.50371.50771.50971.51171.52971.55171.55771.55971.56771.57971.58571.59571.61171.61971.62571.63171.63771.65171.65571.65971.68771.73571.75971.80971.81171.82456 = type { i64, i32, i32, i32, i32, i32*, i32*, double }
%"class.std::vector.86.123.341.558.767.976.2376.4176.5976.7376.8776.10576.12376.13776.15576.17376.19176.19776.20776.22176.23976.26176.27576.28976.30776.32176.33576.34976.36776.37376.38376.42176.42376.42776.42976.43576.43976.44776.45176.45376.45576.45776.46976.47976.50176.50376.50776.50976.51176.52976.55176.55776.55976.56776.57976.58576.59576.61176.61976.62576.63176.63776.65176.65576.65976.68776.73576.75976.80976.81176.82462" = type { %"struct.std::_Vector_base.87.122.340.557.766.975.2375.4175.5975.7375.8775.10575.12375.13775.15575.17375.19175.19775.20775.22175.23975.26175.27575.28975.30775.32175.33575.34975.36775.37375.38375.42175.42375.42775.42975.43575.43975.44775.45175.45375.45575.45775.46975.47975.50175.50375.50775.50975.51175.52975.55175.55775.55975.56775.57975.58575.59575.61175.61975.62575.63175.63775.65175.65575.65975.68775.73575.75975.80975.81175.82461" }
%"struct.std::_Vector_base.87.122.340.557.766.975.2375.4175.5975.7375.8775.10575.12375.13775.15575.17375.19175.19775.20775.22175.23975.26175.27575.28975.30775.32175.33575.34975.36775.37375.38375.42175.42375.42775.42975.43575.43975.44775.45175.45375.45575.45775.46975.47975.50175.50375.50775.50975.51175.52975.55175.55775.55975.56775.57975.58575.59575.61175.61975.62575.63175.63775.65175.65575.65975.68775.73575.75975.80975.81175.82461" = type { %"struct.std::_Vector_base<_node, std::allocator<_node>>::_Vector_impl.121.339.556.765.974.2374.4174.5974.7374.8774.10574.12374.13774.15574.17374.19174.19774.20774.22174.23974.26174.27574.28974.30774.32174.33574.34974.36774.37374.38374.42174.42374.42774.42974.43574.43974.44774.45174.45374.45574.45774.46974.47974.50174.50374.50774.50974.51174.52974.55174.55774.55974.56774.57974.58574.59574.61174.61974.62574.63174.63774.65174.65574.65974.68774.73574.75974.80974.81174.82460" }
%"struct.std::_Vector_base<_node, std::allocator<_node>>::_Vector_impl.121.339.556.765.974.2374.4174.5974.7374.8774.10574.12374.13774.15574.17374.19174.19774.20774.22174.23974.26174.27574.28974.30774.32174.33574.34974.36774.37374.38374.42174.42374.42774.42974.43574.43974.44774.45174.45374.45574.45774.46974.47974.50174.50374.50774.50974.51174.52974.55174.55774.55974.56774.57974.58574.59574.61174.61974.62574.63174.63774.65174.65574.65974.68774.73574.75974.80974.81174.82460" = type { %"struct.std::_Vector_base<_node, std::allocator<_node>>::_Vector_impl_data.120.338.555.764.973.2373.4173.5973.7373.8773.10573.12373.13773.15573.17373.19173.19773.20773.22173.23973.26173.27573.28973.30773.32173.33573.34973.36773.37373.38373.42173.42373.42773.42973.43573.43973.44773.45173.45373.45573.45773.46973.47973.50173.50373.50773.50973.51173.52973.55173.55773.55973.56773.57973.58573.59573.61173.61973.62573.63173.63773.65173.65573.65973.68773.73573.75973.80973.81173.82459" }
%"struct.std::_Vector_base<_node, std::allocator<_node>>::_Vector_impl_data.120.338.555.764.973.2373.4173.5973.7373.8773.10573.12373.13773.15573.17373.19173.19773.20773.22173.23973.26173.27573.28973.30773.32173.33573.34973.36773.37373.38373.42173.42373.42773.42973.43573.43973.44773.45173.45373.45573.45773.46973.47973.50173.50373.50773.50973.51173.52973.55173.55773.55973.56773.57973.58573.59573.61173.61973.62573.63173.63773.65173.65573.65973.68773.73573.75973.80973.81173.82459" = type { %struct._node.119.337.554.763.972.2372.4172.5972.7372.8772.10572.12372.13772.15572.17372.19172.19772.20772.22172.23972.26172.27572.28972.30772.32172.33572.34972.36772.37372.38372.42172.42372.42772.42972.43572.43972.44772.45172.45372.45572.45772.46972.47972.50172.50372.50772.50972.51172.52972.55172.55772.55972.56772.57972.58572.59572.61172.61972.62572.63172.63772.65172.65572.65972.68772.73572.75972.80972.81172.82458*, %struct._node.119.337.554.763.972.2372.4172.5972.7372.8772.10572.12372.13772.15572.17372.19172.19772.20772.22172.23972.26172.27572.28972.30772.32172.33572.34972.36772.37372.38372.42172.42372.42772.42972.43572.43972.44772.45172.45372.45572.45772.46972.47972.50172.50372.50772.50972.51172.52972.55172.55772.55972.56772.57972.58572.59572.61172.61972.62572.63172.63772.65172.65572.65972.68772.73572.75972.80972.81172.82458*, %struct._node.119.337.554.763.972.2372.4172.5972.7372.8772.10572.12372.13772.15572.17372.19172.19772.20772.22172.23972.26172.27572.28972.30772.32172.33572.34972.36772.37372.38372.42172.42372.42772.42972.43572.43972.44772.45172.45372.45572.45772.46972.47972.50172.50372.50772.50972.51172.52972.55172.55772.55972.56772.57972.58572.59572.61172.61972.62572.63172.63772.65172.65572.65972.68772.73572.75972.80972.81172.82458* }
%struct._node.119.337.554.763.972.2372.4172.5972.7372.8772.10572.12372.13772.15572.17372.19172.19772.20772.22172.23972.26172.27572.28972.30772.32172.33572.34972.36772.37372.38372.42172.42372.42772.42972.43572.43972.44772.45172.45372.45572.45772.46972.47972.50172.50372.50772.50972.51172.52972.55172.55772.55972.56772.57972.58572.59572.61172.61972.62572.63172.63772.65172.65572.65972.68772.73572.75972.80972.81172.82458 = type { i64, i64, i32, %class.Lock.117.335.552.761.970.2370.4170.5970.7370.8770.10570.12370.13770.15570.17370.19170.19770.20770.22170.23970.26170.27570.28970.30770.32170.33570.34970.36770.37370.38370.42170.42370.42770.42970.43570.43970.44770.45170.45370.45570.45770.46970.47970.50170.50370.50770.50970.51170.52970.55170.55770.55970.56770.57970.58570.59570.61170.61970.62570.63170.63770.65170.65570.65970.68770.73570.75970.80970.81170.82457 }
%class.Lock.117.335.552.761.970.2370.4170.5970.7370.8770.10570.12370.13770.15570.17370.19170.19770.20770.22170.23970.26170.27570.28970.30770.32170.33570.34970.36770.37370.38370.42170.42370.42770.42970.43570.43970.44770.45170.45370.45570.45770.46970.47970.50170.50370.50770.50970.51170.52970.55170.55770.55970.56770.57970.58570.59570.61170.61970.62570.63170.63770.65170.65570.65970.68770.73570.75970.80970.81170.82457 = type { i32, i32, i32 }

$_ZN3OFM12parallel_bfsEiiii = comdat any

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare token @llvm.syncregion.start() #0

; Function Attrs: argmemonly willreturn
declare void @llvm.sync.unwind(token) #1

define dso_local void @_ZN3OFM12parallel_bfsEiiii(%class.OFM.124.342.559.768.977.2377.4177.5977.7377.8777.10577.12377.13777.15577.17377.19177.19777.20777.22177.23977.26177.27577.28977.30777.32177.33577.34977.36777.37377.38377.42177.42377.42777.42977.43577.43977.44777.45177.45377.45577.45777.46977.47977.50177.50377.50777.50977.51177.52977.55177.55777.55977.56777.57977.58577.59577.61177.61977.62577.63177.63777.65177.65577.65977.68777.73577.75977.80977.81177.82463* %this, i32 %source) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %syncreg = tail call token @llvm.syncregion.start()
  %call5 = invoke i64 undef(%class.OFM.124.342.559.768.977.2377.4177.5977.7377.8777.10577.12377.13777.15577.17377.19177.19777.20777.22177.23977.26177.27577.28977.30777.32177.33577.34977.36777.37377.38377.42177.42377.42777.42977.43577.43977.44777.45177.45377.45577.45777.46977.47977.50177.50377.50777.50977.51177.52977.55177.55777.55977.56777.57977.58577.59577.61177.61977.62577.63177.63777.65177.65577.65977.68777.73577.75977.80977.81177.82463* nonnull dereferenceable(616) %this)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %call40 = invoke i64 undef(%class.OFM.124.342.559.768.977.2377.4177.5977.7377.8777.10577.12377.13777.15577.17377.19177.19777.20777.22177.23977.26177.27577.28977.30777.32177.33577.34977.36777.37377.38377.42177.42377.42777.42977.43577.43977.44777.45177.45377.45577.45777.46977.47977.50177.50377.50777.50977.51177.52977.55177.55777.55977.56777.57977.58577.59577.61177.61977.62577.63177.63777.65177.65577.65977.68777.73577.75977.80977.81177.82463* nonnull dereferenceable(616) %this)
          to label %invoke.cont39 unwind label %lpad38

lpad:                                             ; preds = %entry
  %0 = landingpad { i8*, i32 }
          cleanup
  resume { i8*, i32 } %0

invoke.cont39:                                    ; preds = %invoke.cont
  invoke void @_Znam() #3
          to label %invoke.cont41 unwind label %lpad38

invoke.cont41:                                    ; preds = %invoke.cont39
  %call46 = invoke i64 undef(%class.OFM.124.342.559.768.977.2377.4177.5977.7377.8777.10577.12377.13777.15577.17377.19177.19777.20777.22177.23977.26177.27577.28977.30777.32177.33577.34977.36777.37377.38377.42177.42377.42777.42977.43577.43977.44777.45177.45377.45577.45777.46977.47977.50177.50377.50777.50977.51177.52977.55177.55777.55977.56777.57977.58577.59577.61177.61977.62577.63177.63777.65177.65577.65977.68777.73577.75977.80977.81177.82463* nonnull dereferenceable(616) %this)
          to label %invoke.cont45 unwind label %lpad44

invoke.cont45:                                    ; preds = %invoke.cont41
  invoke void @_Znam() #3
          to label %invoke.cont47 unwind label %lpad44

invoke.cont47:                                    ; preds = %invoke.cont45
  %call54 = invoke i64 undef(%class.OFM.124.342.559.768.977.2377.4177.5977.7377.8777.10577.12377.13777.15577.17377.19177.19777.20777.22177.23977.26177.27577.28977.30777.32177.33577.34977.36777.37377.38377.42177.42377.42777.42977.43577.43977.44777.45177.45377.45577.45777.46977.47977.50177.50377.50777.50977.51177.52977.55177.55777.55977.56777.57977.58577.59577.61177.61977.62577.63177.63777.65177.65577.65977.68777.73577.75977.80977.81177.82463* nonnull dereferenceable(616) %this)
          to label %invoke.cont53 unwind label %ehcleanup647.thread

invoke.cont53:                                    ; preds = %invoke.cont47
  invoke void @_Znam() #3
          to label %invoke.cont55 unwind label %ehcleanup647.thread

invoke.cont55:                                    ; preds = %invoke.cont53
  %call63 = invoke i32 undef(%class.OFM.124.342.559.768.977.2377.4177.5977.7377.8777.10577.12377.13777.15577.17377.19177.19777.20777.22177.23977.26177.27577.28977.30777.32177.33577.34977.36777.37377.38377.42177.42377.42777.42977.43577.43977.44777.45177.45377.45577.45777.46977.47977.50177.50377.50777.50977.51177.52977.55177.55777.55977.56777.57977.58577.59577.61177.61977.62577.63177.63777.65177.65577.65977.68777.73577.75977.80977.81177.82463* nonnull dereferenceable(616) %this, i32 %source)
          to label %invoke.cont62 unwind label %ehcleanup643.thread

invoke.cont62:                                    ; preds = %invoke.cont55
  br label %while.body

while.body:                                       ; preds = %cleanup337, %invoke.cont62
  %curr.sroa.0.0744 = phi i64* [ undef, %invoke.cont62 ], [ %front.sroa.0.0739, %cleanup337 ]
  %front.sroa.0.0739 = phi i64* [ undef, %invoke.cont62 ], [ %curr.sroa.0.0744, %cleanup337 ]
  detach within %syncreg, label %pfor.body89, label %pfor.inc104

lpad38:                                           ; preds = %invoke.cont39, %invoke.cont
  %1 = landingpad { i8*, i32 }
          cleanup
  unreachable

lpad44:                                           ; preds = %invoke.cont45, %invoke.cont41
  %2 = landingpad { i8*, i32 }
          cleanup
  unreachable

ehcleanup647.thread:                              ; preds = %invoke.cont53, %invoke.cont47
  %3 = landingpad { i8*, i32 }
          cleanup
  unreachable

ehcleanup643.thread:                              ; preds = %invoke.cont55
  %4 = landingpad { i8*, i32 }
          cleanup
  unreachable

pfor.body89:                                      ; preds = %while.body
  unreachable

pfor.inc104:                                      ; preds = %while.body
  sync within %syncreg, label %sync.continue109

lpad103:                                          ; preds = %sync.continue109
  %5 = landingpad { i8*, i32 }
          cleanup
  unreachable

sync.continue109:                                 ; preds = %pfor.inc104
  invoke void @llvm.sync.unwind(token %syncreg)
          to label %invoke.cont121 unwind label %lpad103

invoke.cont121:                                   ; preds = %sync.continue109
  br label %do.body

do.body:                                          ; preds = %invoke.cont121
  %call138 = invoke i64 undef(%class.OFM.124.342.559.768.977.2377.4177.5977.7377.8777.10577.12377.13777.15577.17377.19177.19777.20777.22177.23977.26177.27577.28977.30777.32177.33577.34977.36777.37377.38377.42177.42377.42777.42977.43577.43977.44777.45177.45377.45577.45777.46977.47977.50177.50377.50777.50977.51177.52977.55177.55777.55977.56777.57977.58577.59577.61177.61977.62577.63177.63777.65177.65577.65977.68777.73577.75977.80977.81177.82463* nonnull dereferenceable(616) %this)
          to label %invoke.cont137 unwind label %lpad136

invoke.cont137:                                   ; preds = %do.body
  %call252 = invoke i64 undef(%class.OFM.124.342.559.768.977.2377.4177.5977.7377.8777.10577.12377.13777.15577.17377.19177.19777.20777.22177.23977.26177.27577.28977.30777.32177.33577.34977.36777.37377.38377.42177.42377.42777.42977.43577.43977.44777.45177.45377.45577.45777.46977.47977.50177.50377.50777.50977.51177.52977.55177.55777.55977.56777.57977.58577.59577.61177.61977.62577.63177.63777.65177.65577.65977.68777.73577.75977.80977.81177.82463* nonnull dereferenceable(616) %this)
          to label %invoke.cont251 unwind label %lpad120

lpad120:                                          ; preds = %invoke.cont137
  %6 = landingpad { i8*, i32 }
          cleanup
  unreachable

lpad136:                                          ; preds = %do.body
  %7 = landingpad { i8*, i32 }
          cleanup
  unreachable

invoke.cont251:                                   ; preds = %invoke.cont137
  invoke void @_Znam() #3
          to label %for.inc275 unwind label %lpad273

for.inc275:                                       ; preds = %invoke.cont251
  %call287 = invoke i64 undef(%class.OFM.124.342.559.768.977.2377.4177.5977.7377.8777.10577.12377.13777.15577.17377.19177.19777.20777.22177.23977.26177.27577.28977.30777.32177.33577.34977.36777.37377.38377.42177.42377.42777.42977.43577.43977.44777.45177.45377.45577.45777.46977.47977.50177.50377.50777.50977.51177.52977.55177.55777.55977.56777.57977.58577.59577.61177.61977.62577.63177.63777.65177.65577.65977.68777.73577.75977.80977.81177.82463* nonnull dereferenceable(616) %this)
          to label %invoke.cont286 unwind label %lpad285

lpad273:                                          ; preds = %invoke.cont251
  %8 = landingpad { i8*, i32 }
          cleanup
  unreachable

invoke.cont286:                                   ; preds = %for.inc275
  br label %pfor.cond298

lpad285:                                          ; preds = %for.inc275
  %9 = landingpad { i8*, i32 }
          cleanup
  unreachable

pfor.cond298:                                     ; preds = %pfor.inc326, %invoke.cont286
  %indvars.iv880 = phi i64 [ 0, %invoke.cont286 ], [ %indvars.iv.next881, %pfor.inc326 ]
  %indvars.iv.next881 = add nuw nsw i64 %indvars.iv880, 1
  detach within %syncreg, label %pfor.body304, label %pfor.inc326 unwind label %lpad325.loopexit

pfor.body304:                                     ; preds = %pfor.cond298
  br label %pfor.preattach318

pfor.preattach318:                                ; preds = %pfor.body304
  reattach within %syncreg, label %pfor.inc326

pfor.inc326:                                      ; preds = %pfor.preattach318, %pfor.cond298
  %exitcond883.not = icmp eq i64 %indvars.iv.next881, undef
  br i1 %exitcond883.not, label %pfor.cond.cleanup329, label %pfor.cond298

pfor.cond.cleanup329:                             ; preds = %pfor.inc326
  sync within %syncreg, label %sync.continue331

lpad325.loopexit:                                 ; preds = %pfor.cond298
  %lpad.loopexit596 = landingpad { i8*, i32 }
          cleanup
  %isnull.i249 = icmp eq i64* %curr.sroa.0.0744, null
  unreachable

lpad325.loopexit.split-lp:                        ; preds = %sync.continue331
  %lpad.loopexit.split-lp597 = landingpad { i8*, i32 }
          cleanup
  unreachable

sync.continue331:                                 ; preds = %pfor.cond.cleanup329
  invoke void @llvm.sync.unwind(token %syncreg)
          to label %cleanup337 unwind label %lpad325.loopexit.split-lp

cleanup337:                                       ; preds = %sync.continue331
  br label %while.body
}

; CHECK: pfor.cond298.strpm.outer:
; CHECK: detach within %syncreg, label %[[STRPM_OUTER_BODY:.+]], label %[[STRPM_CONT:.+]] unwind label %lpad325.loopexit

; CHECK: [[STRPM_OUTER_BODY]]:
; CHECK: br label %pfor.cond298

; CHECK: pfor.cond298:

; CHECK: [[STRPM_CONT]]:

; CHECK: br label %pfor.cond298.epil

; CHECK: pfor.cond298.epil:
; CHECK-DAG: %indvars.iv880.epil =
; CHECK-DAG: %epil.iter =
; CHECK-DAG: %indvars.iv.next881.epil =
; CHECK-NOT: detach within
; CHECK: br label %pfor.body304.epil

; CHECK: pfor.body304.epil:
; CHECK-NEXT: br label %pfor.preattach318.epil

; CHECK: pfor.preattach318.epil
; CHECK-NOT: reattach within
; CHECK-NEXT: br label %pfor.inc326.epil

; CHECK: pfor.inc326.epil:

; CHECK: sync within

; CHECK: lpad325.loopexit:
; CHECK-NEXT: landingpad
; CHECK-NEXT: cleanup

declare dso_local void @_Znam() local_unnamed_addr #2

attributes #0 = { argmemonly nounwind willreturn }
attributes #1 = { argmemonly willreturn }
attributes #2 = { "use-soft-float"="false" }
attributes #3 = { builtin }

!llvm.ident = !{!0}

!0 = !{!"clang version 12.0.0 (git@github.com:OpenCilk/opencilk-project.git 59dcdc73a701d0d8e4569cc80f1ef56b1bc69f83)"}
